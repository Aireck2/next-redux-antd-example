{"ast":null,"code":"var _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _Object$defineProperties = require(\"@babel/runtime-corejs2/core-js/object/define-properties\");\n\nvar _Object$getOwnPropertyDescriptors = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\");\n\nvar _Object$getOwnPropertyDescriptor = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\");\n\nvar _Object$getOwnPropertySymbols = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\");\n\nvar _Object$keys = require(\"@babel/runtime-corejs2/core-js/object/keys\");\n\nvar _defineProperty = require(\"@babel/runtime-corejs2/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst headerReducer = (state = {\n  number: 0\n}, action) => {\n  switch (action.type) {\n    case 'ADD_ONE':\n      return _objectSpread({}, state, {\n        number: number++\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/erick/.ghq/github.com/Aireck2/next-redux-antd-example/src/redux/reducers/headerReducer.js"],"names":["headerReducer","state","number","action","type"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,MAAMA,aAAa,GAAG,CAACC,KAAK,GAAG;AAC7BC,EAAAA,MAAM,EAAE;AADqB,CAAT,EAEnBC,MAFmB,KAER;AACZ,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,SAAL;AACE,+BACKH,KADL;AAEEC,QAAAA,MAAM,EAAEA,MAAM;AAFhB;;AAKA;AACE,aAAOD,KAAP;AARN;AAYD,CAfD","sourcesContent":["const headerReducer = (state = {\n  number: 0\n}, action) => {\n  switch (action.type) {\n    case 'ADD_ONE':\n      return {\n        ...state,\n        number: number++\n      }\n\n      default:\n        return state\n  }\n\n\n};"]},"metadata":{},"sourceType":"script"}